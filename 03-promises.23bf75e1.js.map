{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAC5BD,SAASC,cAAc,yBA+B/BG,iBAAiB,SAAUC,IACjCA,EAAEC,iBACF,MAAMC,EAAeC,OAAOT,EAAWU,OACjCC,EAAcF,OAAON,EAAUO,OAC/BE,EAAgBH,OAAOL,EAAYM,OArB1C,IAAiCG,EAAOC,EAAMC,EAAbF,EAsBRL,EAtBeM,EAsBDH,EAtBOI,EAsBMH,EArBnDI,YAAW,KACV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAClBD,YAAW,KAfvB,IAAuBE,EAAUC,GAAVD,EAgBLD,EAAI,EAhBWE,EAgBRN,EAfjB,IAAIO,SAAQ,CAACC,EAASC,KACNC,KAAKC,SAAW,GAErCH,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,KAUxBM,MAAK,EAACP,SAAEA,EAAQC,MAAEA,MAClBO,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBV,QAAiBC,MAAU,IAExEU,OAAM,EAACX,SAAEA,EAAQC,MAAEA,MACnBO,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBZ,QAAeC,MAAU,GACpE,GAEDL,EAAOG,E,GAETJ,GASHG,YAAW,KACVhB,EAAWU,MAAQ,GACnBP,EAAUO,MAAQ,GAClBN,EAAYM,MAAQ,EAAE,GACpBE,EAAiBD,EAAeH,EAAa","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst button = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst shouldResolve = Math.random() > 0.3;\n\t\tif (shouldResolve) {\n\t\t\tresolve({ position, delay });\n\t\t} else {\n\t\t\t// Reject\n\t\t\treject({ position, delay });\n\t\t}\n\t});\n}\n\nfunction generateDelayedPromises(delay, step, amount) {\n\tsetTimeout(() => {\n\t\tfor (let i = 0; i < amount; i++) {\n\t\t\tlet id = setTimeout(() => {\n\t\t\t\tcreatePromise(i + 1, delay)\n\t\t\t\t\t.then(({ position, delay }) => {\n\t\t\t\t\t\tNotiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(({ position, delay }) => {\n\t\t\t\t\t\tNotiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\t\t\t\t\t});\n\t\t\t\t// console.log(i + 1);\n\t\t\t}, step * i);\n\t\t}\n\t}, delay);\n}\n\nbutton.addEventListener('click', (e) => {\n\te.preventDefault();\n\tconst valueOfDelay = Number(firstDelay.value);\n\tconst valueOfStep = Number(delayStep.value);\n\tconst valueOfAmount = Number(inputAmount.value);\n\tgenerateDelayedPromises(valueOfDelay, valueOfStep, valueOfAmount);\n\tsetTimeout(() => {\n\t\tfirstDelay.value = \"\";\n\t\tdelayStep.value = \"\";\n\t\tinputAmount.value = \"\";\n\t}, (valueOfAmount * valueOfStep) + valueOfDelay);\n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$inputAmount","addEventListener","e","preventDefault","valueOfDelay","Number","value","valueOfStep","valueOfAmount","delay1","step","amount","setTimeout","i","position","delay","Promise","resolve","reject","Math","random","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.23bf75e1.js.map"}